"""empty message

Revision ID: 56a7e32e90ae
Revises: 326660ba0370
Create Date: 2025-07-30 10:56:50.054341

"""

from __future__ import annotations

import sqlalchemy as sa
from alembic import context, op
from edgy import monkay, run_sync


# revision identifiers, used by Alembic.
revision = '56a7e32e90ae'
down_revision = '326660ba0370'
branch_labels = None
depends_on = None


def hash_to_identifier(key: str | bytes) -> str:
    from base64 import b32encode
    from hashlib import blake2b
    if isinstance(key, str):
        key = key.encode()
    return f"_{b32encode(blake2b(key, digest_size=16).digest()).decode().rstrip('=')}"

force_fields_nullable: list[tuple[str, str]] = []

def upgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"upgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()


def downgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"downgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()




def upgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_job_contacts_customer_contact'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_job_site_site'), type_='foreignkey')
        batch_op.create_foreign_key('fk_job_site_site', 'site', ['site'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.create_foreign_key('fk_job_contacts_customer_contact', 'contacts', ['customer_contact'], ['id'], onupdate='CASCADE', ondelete='SET NULL')

    # ### end Alembic commands ###
    if not context.is_offline_mode():
        try:
            with monkay.instance.registry.with_async_env():
                run_sync(
                    monkay.instance.registry.apply_default_force_nullable_fields(
                        force_fields_nullable=force_fields_nullable,
                        filter_db_name="",
                        model_defaults={}
                    )
                )
        except Exception as exc:
            print("failure migrating defaults", exc)


def downgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.drop_constraint('fk_job_contacts_customer_contact', type_='foreignkey')
        batch_op.drop_constraint('fk_job_site_site', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_job_site_site'), 'site', ['site'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_job_contacts_customer_contact'), 'contacts', ['customer_contact'], ['id'], onupdate='CASCADE', ondelete='CASCADE')

    # ### end Alembic commands ###

