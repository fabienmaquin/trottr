"""add workspace address and company fields

Revision ID: f543cadcc715
Revises: b67974558869
Create Date: 2025-07-28 09:22:40.457411

"""

from __future__ import annotations

import sqlalchemy as sa
from alembic import context, op
from edgy import monkay, run_sync
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f543cadcc715'
down_revision = 'b67974558869'
branch_labels = None
depends_on = None


def hash_to_identifier(key: str | bytes) -> str:
    from base64 import b32encode
    from hashlib import blake2b
    if isinstance(key, str):
        key = key.encode()
    return f"_{b32encode(blake2b(key, digest_size=16).digest()).decode().rstrip('=')}"

force_fields_nullable: list[tuple[str, str]] = []

def upgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"upgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()


def downgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"downgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()




def upgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workspaces', schema=None) as batch_op:
        batch_op.add_column(sa.Column('street', sa.String(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('street2', sa.String(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('zip', sa.String(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('city', sa.String(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('country', sa.Integer(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('siren', sa.String(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('vat', sa.String(length=30), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('fk_workspaces_countries_country', 'countries', ['country'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.drop_column('plan_current_usage_credits')
        batch_op.drop_column('pack_available_usage_credits')
        batch_op.drop_column('pack_current_usage_credits')
        batch_op.drop_column('available_usage_credits')
        batch_op.drop_column('plan_available_usage_credits')
        batch_op.drop_column('reset_usage_date')
        batch_op.drop_column('current_usage_credits')

    # ### end Alembic commands ###
    if not context.is_offline_mode():
        try:
            with monkay.instance.registry.with_async_env():
                run_sync(
                    monkay.instance.registry.apply_default_force_nullable_fields(
                        force_fields_nullable=force_fields_nullable,
                        filter_db_name="",
                        model_defaults={}
                    )
                )
        except Exception as exc:
            print("failure migrating defaults", exc)


def downgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workspaces', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_usage_credits', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0.0'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('reset_usage_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('plan_available_usage_credits', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0.0'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('available_usage_credits', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0.0'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('pack_current_usage_credits', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0.0'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('pack_available_usage_credits', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0.0'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('plan_current_usage_credits', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0.0'), autoincrement=False, nullable=False))
        batch_op.drop_constraint('fk_workspaces_countries_country', type_='foreignkey')
        batch_op.drop_column('vat')
        batch_op.drop_column('siren')
        batch_op.drop_column('country')
        batch_op.drop_column('city')
        batch_op.drop_column('zip')
        batch_op.drop_column('street2')
        batch_op.drop_column('street')

    # ### end Alembic commands ###

