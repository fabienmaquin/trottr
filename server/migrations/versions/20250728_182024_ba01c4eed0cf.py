"""empty message

Revision ID: ba01c4eed0cf
Revises: 
Create Date: 2025-07-28 18:20:24.116597

"""

from __future__ import annotations

import sqlalchemy as sa
from alembic import context, op
from edgy import monkay, run_sync


# revision identifiers, used by Alembic.
revision = 'ba01c4eed0cf'
down_revision = None
branch_labels = None
depends_on = None


def hash_to_identifier(key: str | bytes) -> str:
    from base64 import b32encode
    from hashlib import blake2b
    if isinstance(key, str):
        key = key.encode()
    return f"_{b32encode(blake2b(key, digest_size=16).digest()).decode().rstrip('=')}"

force_fields_nullable: list[tuple[str, str]] = []

def upgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"upgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()


def downgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"downgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()




def upgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('name', sa.String(length=100), autoincrement=False, nullable=False),
    sa.Column('iso_code', sa.String(length=3), autoincrement=False, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('iso_code')
    )
    op.create_table('users',
    sa.Column('email', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('avatar', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('password', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.Boolean(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('verification_code', sa.String(length=6), autoincrement=False, nullable=True),
    sa.Column('verification_code_expires_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('password_reset_expires_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('preferences', sa.JSON(), autoincrement=False, nullable=True),
    sa.Column('google_access_token', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('google_refresh_token', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('google_token_expires_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('google_email', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('google_connected_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user_refresh_tokens',
    sa.Column('token', sa.String(length=256), autoincrement=False, nullable=False),
    sa.Column('user', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('revoked', sa.Boolean(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_user_refresh_tokens_users_user', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('workspaces',
    sa.Column('name', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('unique_id', sa.String(length=8), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('currency', sa.String(length=20), server_default=sa.text("'EUR'"), autoincrement=False, nullable=False),
    sa.Column('street', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('street2', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('default_job_duration', sa.Enum('minutes_60', 'minutes_90', 'minutes_120', 'minutes_180', 'minutes_240', 'minutes_300', 'minutes_360', 'minutes_420', 'minutes_480', name='defaultjobduration'), server_default=sa.text("'minutes_60'"), autoincrement=False, nullable=False),
    sa.Column('default_job_priority', sa.Enum('low', 'normal', 'high', 'urgent', name='defaultjobpriority'), server_default=sa.text("'normal'"), autoincrement=False, nullable=False),
    sa.Column('metadata', sa.JSON(), autoincrement=False, nullable=True),
    sa.Column('zip', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('city', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('country', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('siren', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('vat', sa.String(length=30), autoincrement=False, nullable=True),
    sa.Column('dashboard_config', sa.JSON(), autoincrement=False, nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('trial_end', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('comply_with_local_privacy_laws', sa.Boolean(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['country'], ['countries.id'], name='fk_workspaces_countries_country', onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id'),
    sa.UniqueConstraint('unique_id')
    )
    op.create_table('companies',
    sa.Column('name', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('reference', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('company_type', sa.Enum('CLIENT_FINAL', 'REGIE_GESTIONNAIRE', 'DONNEUR_ORDRE', 'SOUS_TRAITANT', 'FOURNISSEUR', 'AUTRE', name='companytype'), server_default=sa.text("'CLIENT_FINAL'"), autoincrement=False, nullable=False),
    sa.Column('phone', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('invoice_street', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('invoice_zip', sa.String(length=10), autoincrement=False, nullable=True),
    sa.Column('invoice_city', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('invoice_country', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('siret', sa.String(length=14), autoincrement=False, nullable=True),
    sa.Column('vat', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['invoice_country'], ['countries.id'], name='fk_companies_countries_invoice_country', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_companies_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contact_relation_types',
    sa.Column('sequence', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_contact_relation_types_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_categories',
    sa.Column('sequence', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('color', sa.String(length=7), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_job_categories_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_status',
    sa.Column('sequence', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('color', sa.String(length=7), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_job_status_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_presences',
    sa.Column('user', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('last_poll', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('last_presence', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('status', sa.Enum('ONLINE', 'AWAY', 'OFFLINE', name='presencestatus'), server_default=sa.text("'OFFLINE'"), autoincrement=False, nullable=False),
    sa.Column('current_topic', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('connection_count', sa.Integer(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_user_presences_users_user', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_user_presences_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace', 'user', name='uc_4HYJJVJSEGIVQ4BYFZRCEPTV7Y')
    )
    op.create_table('workspace_invitations',
    sa.Column('email', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('invitation_token', sa.String(length=64), autoincrement=False, nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_workspace_invitations_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', 'workspace', name='uc_JM3CQM7RSMQTWELZRHD7VIJ5P4'),
    sa.UniqueConstraint('invitation_token')
    )
    op.create_table('workspace_users',
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'MEMBER', 'OPERATOR', name='workspaceuserrole'), server_default=sa.text("'MEMBER'"), autoincrement=False, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_workspace_users_users_user', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_workspace_users_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace', 'user', name='uc_XC4RL2OZHUVBPS7MOTMBYXQSWQ')
    )
    op.create_table('site',
    sa.Column('name', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('street', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('street_2', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('zip', sa.String(length=20), autoincrement=False, nullable=False),
    sa.Column('city', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('country', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('building_type', sa.Enum('RESIDENCE_COLLECTIVE', 'MAISON_INDIVIDUELLE', 'BATIMENT_TERTIAIRE', 'LOCAL_COMMERCIAL', 'AUTRE', name='buildingtype'), server_default=sa.text("'AUTRE'"), autoincrement=False, nullable=False),
    sa.Column('company', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('access_info', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company'], ['companies.id'], name='fk_site_companies_company', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['country'], ['countries.id'], name='fk_site_countries_country', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_site_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###
    if not context.is_offline_mode():
        try:
            with monkay.instance.registry.with_async_env():
                run_sync(
                    monkay.instance.registry.apply_default_force_nullable_fields(
                        force_fields_nullable=force_fields_nullable,
                        filter_db_name="",
                        model_defaults={}
                    )
                )
        except Exception as exc:
            print("failure migrating defaults", exc)


def downgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_table('site')
    op.drop_table('workspace_users')
    op.drop_table('workspace_invitations')
    op.drop_table('user_presences')
    op.drop_table('job_status')
    op.drop_table('job_categories')
    op.drop_table('contact_relation_types')
    op.drop_table('companies')
    op.drop_table('workspaces')
    op.drop_table('user_refresh_tokens')
    op.drop_table('users')
    op.drop_table('countries')
    # ### end Alembic commands ###

