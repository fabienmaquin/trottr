"""Add Site model

Revision ID: 812bdc7bf5dc
Revises: 1245e58eed3c
Create Date: 2025-07-28 15:09:49.747883

"""

from __future__ import annotations

import sqlalchemy as sa
from alembic import context, op
from edgy import monkay, run_sync


# revision identifiers, used by Alembic.
revision = '812bdc7bf5dc'
down_revision = '1245e58eed3c'
branch_labels = None
depends_on = None


def hash_to_identifier(key: str | bytes) -> str:
    from base64 import b32encode
    from hashlib import blake2b
    if isinstance(key, str):
        key = key.encode()
    return f"_{b32encode(blake2b(key, digest_size=16).digest()).decode().rstrip('=')}"

force_fields_nullable: list[tuple[str, str]] = []

def upgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"upgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()


def downgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"downgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()




def upgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('site',
    sa.Column('name', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('street', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('street_2', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('zip', sa.String(length=20), autoincrement=False, nullable=False),
    sa.Column('city', sa.String(length=255), autoincrement=False, nullable=False),
    sa.Column('country', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('building_type', sa.Enum('RESIDENCE_COLLECTIVE', 'MAISON_INDIVIDUELLE', 'BATIMENT_TERTIAIRE', 'LOCAL_COMMERCIAL', 'AUTRE', name='buildingtype'), server_default=sa.text("'AUTRE'"), autoincrement=False, nullable=False),
    sa.Column('company', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.Integer(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company'], ['companies.id'], name='fk_site_companies_company', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['country'], ['countries.id'], name='fk_site_countries_country', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace'], ['workspaces.id'], name='fk_site_workspaces_workspace', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    if not context.is_offline_mode():
        try:
            with monkay.instance.registry.with_async_env():
                run_sync(
                    monkay.instance.registry.apply_default_force_nullable_fields(
                        force_fields_nullable=force_fields_nullable,
                        filter_db_name="",
                        model_defaults={}
                    )
                )
        except Exception as exc:
            print("failure migrating defaults", exc)


def downgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('site')
    # ### end Alembic commands ###

